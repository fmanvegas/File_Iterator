<Window x:Class="File_Iterator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:File_Iterator"
        mc:Ignorable="d"
        FontFamily="Segoe UI Light"
        Closing="Window_Closing"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip"
        AllowsTransparency="True"
        Title="MainWindow" Height="450" Width="800">
    <Window.Background>
        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FF0A0D42" Offset="0.853"/>
            <GradientStop Color="#FF153365" Offset="1"/>
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color="#FF242425" Offset="0.128"/>
        </LinearGradientBrush>
    </Window.Background>
    <Window.DataContext>
        <local:IteratorViewModel/>
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>


        <Grid VerticalAlignment="Center">
            <!--<Grid.Background>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FF252526" Offset="0.54"/>
                    <GradientStop Color="Purple" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/> 
            </Grid.ColumnDefinitions>
            <TextBlock VerticalAlignment="Center" Text="BIPHER" Margin="10,0" FontSize="34" Foreground="Yellow" FontFamily="Arial Narrow" HorizontalAlignment="Stretch"
                       MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                       >
                <TextBlock.Effect>
                    <DropShadowEffect/>
                </TextBlock.Effect>
            </TextBlock>
            <Button Content="-" Grid.Column="1" FontSize="35" Background="Transparent" VerticalContentAlignment="Top" VerticalAlignment="Top"
                     CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"   IsEnabled="True"
                    Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                    />

        </Grid>
     

        <Grid Grid.Row="1">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>




            <StackPanel Grid.Row="0" Grid.RowSpan="4">
                <GroupBox Header="FILES" BorderBrush="Transparent" BorderThickness="0" Foreground="White">
                    <TextBlock Text="{Binding TotalFiles}" Margin="3" FontSize="30" />
                </GroupBox>
                <GroupBox Header="EXTENSIONS" BorderBrush="Transparent" BorderThickness="0" Foreground="White">
                    <TextBlock Text="{Binding TotalExtensions}" Margin="3" FontSize="30" />
                </GroupBox>
                <GroupBox Header="SCAN TIME" BorderBrush="Transparent" BorderThickness="0" Foreground="White">
                    <TextBlock Margin="3" FontSize="30" >
                    <Run Text="3"/><Run Text="Min" FontSize="10"/>
                    <Run Text="13"/><Run Text="Sec" FontSize="10"/>
                    </TextBlock>
                </GroupBox>

                <GroupBox Header="DIRTY FILES" BorderBrush="Transparent" BorderThickness="0" Foreground="White">
                    <TextBlock Text="{Binding DirtyCount}" Margin="3" FontSize="30"/>
                </GroupBox>

                <GroupBox Header="DIRTY PERCENT" BorderBrush="Transparent" BorderThickness="0" Foreground="White">
                    <TextBlock Margin="3" FontSize="30">
                    <Run Text="{Binding DirtyPercent}"/><Run Text="%" FontSize="15"  />
                    </TextBlock>
                </GroupBox>
            </StackPanel>


            <TabControl Grid.Column="1" TabStripPlacement="Left">
                <TabItem Header="Setup">
                    <StackPanel Margin="10,0" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Content="Search" Command="{Binding SearchLocationCommand}"/>
                            <TextBox Grid.Column="1" Text="{Binding Location, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold"/>
                        </Grid>
                    </StackPanel>

                </TabItem>
                <TabItem Header="Results">

                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Bad}" Value="True"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Pink"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Bad}" Value="true"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Red"/>
                                    </MultiDataTrigger>


                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Bad}" Value="false"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Blue"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Bad}" Value="false"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Gray"/>
                                    </MultiDataTrigger>
                                    <!--<DataTrigger Binding="{Binding Bad}" Value="True">
                                        <Setter Property="Background" Value="Green"/>
                                    </DataTrigger>-->
                                    <!--<Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FF0000" />
                                    </Trigger>-->
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                       
                        <TabControl Grid.Column="1" Grid.Row="1"  Background="Transparent">

                            <TabItem >
                                <TabItem.Header>
                                    <TextBlock >
                    <Run Text="Files To Verify:"/>
                    <Run Text="{Binding Files.Count, Mode=OneWay}" FontWeight="Bold"/>
                                    </TextBlock>
                                </TabItem.Header>
                                <DataGrid ItemsSource="{Binding Files}" AutoGenerateColumns="False" IsReadOnly="True" SelectedItem="{Binding SelectedFile, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Location" Binding="{Binding File.Directory.FullName}"/>
                                        <DataGridTextColumn Header="File Name" Binding="{Binding File.Name}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>


                            <TabItem>
                                <TabItem.Header>
                                    <TextBlock Foreground="Red">
                    <Run Text="Bad Files:"/>
                    <Run Text="{Binding BadFiles.Count, Mode=OneWay}" FontWeight="Bold"/>
                                    </TextBlock>
                                </TabItem.Header>
                                <DataGrid ItemsSource="{Binding BadFiles}" AutoGenerateColumns="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Location" Binding="{Binding File.Directory.FullName}"/>
                                        <DataGridTextColumn Header="File Name" Binding="{Binding File.Name}"/>
                                        <DataGridTextColumn Header="Comment" Binding="{Binding Comment}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>

                            <TabItem>
                                <TabItem.Header>
                                    <TextBlock Foreground="Green">
                    <Run Text="Good Files:"/>
                    <Run Text="{Binding GoodFiles.Count, Mode=OneWay}" FontWeight="Bold"/>
                                    </TextBlock>
                                </TabItem.Header>
                                <DataGrid ItemsSource="{Binding GoodFiles}" AutoGenerateColumns="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Location" Binding="{Binding File.Directory.FullName}"/>
                                        <DataGridTextColumn Header="File Name" Binding="{Binding File.Name}"/>
                                        <DataGridTextColumn Header="Comment" Binding="{Binding Comment}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>

                        </TabControl>


                        <GridSplitter Grid.Column="1" Grid.Row="2" ResizeDirection="Rows" Background="Gray" Height="3" HorizontalAlignment="Stretch"/>

                        <GroupBox Grid.Column="2" Grid.Row="3">
                            <GroupBox.Header>
                                <TextBlock >
                    <Run Text="File:"/>
                    <Run Text="{Binding SelectedFile.File.Name, Mode=OneWay}" FontWeight="Bold"/>
                    <Run Text="Lines:"/>
                    <Run Text="{Binding SelectedFile.Lines.Count, Mode=OneWay}" FontWeight="Bold"/>
                                </TextBlock>
                            </GroupBox.Header>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <Grid>
                                    <DataGrid ItemsSource="{Binding SelectedFile.Lines}" AutoGenerateColumns="False">
                                        <DataGrid.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="LightBlue"/>
                                        </DataGrid.Resources>
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="Bad">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Button Content="X" Command="{Binding CommandSetBad}" Background="LightPink"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Header="Line" Binding="{Binding Index}" IsReadOnly="True"/>
                                            <DataGridTemplateColumn Header="Good">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Button Content="X" Command="{Binding CommandSetGood}" Background="LightGreen"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Header="Content" Binding="{Binding Content}" IsReadOnly="True">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Bad}" Value="True">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>

                                    </DataGrid>
                                </Grid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Comments:"/>
                                    <TextBox Grid.Column="1" Text="{Binding SelectedFile.Comment, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                                <Button Grid.Row="2" Content="Finalize File" CommandParameter="{Binding SelectedFile}" Command="{Binding FinalizeFileCommand}"/>
                            </Grid>

                        </GroupBox>
                    </Grid>
                </TabItem>

            </TabControl>

        </Grid>

    </Grid>

</Window>
